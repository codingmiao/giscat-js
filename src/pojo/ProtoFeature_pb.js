// source: definition/ProtoFeature.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.pojo.Feature', null, global);
goog.exportSymbol('proto.pojo.FeatureCollection', null, global);
goog.exportSymbol('proto.pojo.Geometry', null, global);
goog.exportSymbol('proto.pojo.GeometryCollection', null, global);
goog.exportSymbol('proto.pojo.LineString', null, global);
goog.exportSymbol('proto.pojo.List', null, global);
goog.exportSymbol('proto.pojo.Map', null, global);
goog.exportSymbol('proto.pojo.MultiLineString', null, global);
goog.exportSymbol('proto.pojo.MultiPoint', null, global);
goog.exportSymbol('proto.pojo.MultiPolygon', null, global);
goog.exportSymbol('proto.pojo.NullGeometry', null, global);
goog.exportSymbol('proto.pojo.Point', null, global);
goog.exportSymbol('proto.pojo.Polygon', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.NullGeometry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pojo.NullGeometry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.NullGeometry.displayName = 'proto.pojo.NullGeometry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pojo.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.Point.displayName = 'proto.pojo.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.LineString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.LineString.repeatedFields_, null);
};
goog.inherits(proto.pojo.LineString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.LineString.displayName = 'proto.pojo.LineString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.Polygon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.Polygon.repeatedFields_, null);
};
goog.inherits(proto.pojo.Polygon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.Polygon.displayName = 'proto.pojo.Polygon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.MultiPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.MultiPoint.repeatedFields_, null);
};
goog.inherits(proto.pojo.MultiPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.MultiPoint.displayName = 'proto.pojo.MultiPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.MultiLineString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.MultiLineString.repeatedFields_, null);
};
goog.inherits(proto.pojo.MultiLineString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.MultiLineString.displayName = 'proto.pojo.MultiLineString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.MultiPolygon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.MultiPolygon.repeatedFields_, null);
};
goog.inherits(proto.pojo.MultiPolygon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.MultiPolygon.displayName = 'proto.pojo.MultiPolygon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.GeometryCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.GeometryCollection.repeatedFields_, null);
};
goog.inherits(proto.pojo.GeometryCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.GeometryCollection.displayName = 'proto.pojo.GeometryCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.Geometry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pojo.Geometry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.Geometry.displayName = 'proto.pojo.Geometry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.Feature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pojo.Feature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.Feature.displayName = 'proto.pojo.Feature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.Map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.Map.repeatedFields_, null);
};
goog.inherits(proto.pojo.Map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.Map.displayName = 'proto.pojo.Map';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.List.repeatedFields_, null);
};
goog.inherits(proto.pojo.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.List.displayName = 'proto.pojo.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pojo.FeatureCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pojo.FeatureCollection.repeatedFields_, null);
};
goog.inherits(proto.pojo.FeatureCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pojo.FeatureCollection.displayName = 'proto.pojo.FeatureCollection';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.NullGeometry.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.NullGeometry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.NullGeometry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.NullGeometry.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.NullGeometry}
 */
proto.pojo.NullGeometry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.NullGeometry;
  return proto.pojo.NullGeometry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.NullGeometry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.NullGeometry}
 */
proto.pojo.NullGeometry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.NullGeometry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.NullGeometry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.NullGeometry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.NullGeometry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.Point}
 */
proto.pojo.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.Point;
  return proto.pojo.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.Point}
 */
proto.pojo.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.pojo.Point.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pojo.Point} returns this
 */
proto.pojo.Point.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.pojo.Point.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pojo.Point} returns this
 */
proto.pojo.Point.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.pojo.Point.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pojo.Point} returns this
 */
proto.pojo.Point.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.LineString.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.LineString.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.LineString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.LineString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.LineString.toObject = function(includeInstance, msg) {
  var f, obj = {
    xsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    ysList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    zsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.LineString}
 */
proto.pojo.LineString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.LineString;
  return proto.pojo.LineString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.LineString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.LineString}
 */
proto.pojo.LineString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addXs(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addYs(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addZs(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.LineString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.LineString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.LineString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.LineString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getYsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getZsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
};


/**
 * repeated double xs = 1;
 * @return {!Array<number>}
 */
proto.pojo.LineString.prototype.getXsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.setXsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.addXs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.clearXsList = function() {
  return this.setXsList([]);
};


/**
 * repeated double ys = 2;
 * @return {!Array<number>}
 */
proto.pojo.LineString.prototype.getYsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.setYsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.addYs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.clearYsList = function() {
  return this.setYsList([]);
};


/**
 * repeated double zs = 3;
 * @return {!Array<number>}
 */
proto.pojo.LineString.prototype.getZsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.setZsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.addZs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.LineString} returns this
 */
proto.pojo.LineString.prototype.clearZsList = function() {
  return this.setZsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.Polygon.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.Polygon.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.Polygon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.Polygon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Polygon.toObject = function(includeInstance, msg) {
  var f, obj = {
    xsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    ysList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    zsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    separatorsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.Polygon}
 */
proto.pojo.Polygon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.Polygon;
  return proto.pojo.Polygon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.Polygon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.Polygon}
 */
proto.pojo.Polygon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addXs(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addYs(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addZs(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSeparators(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.Polygon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.Polygon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.Polygon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Polygon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getYsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getZsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getSeparatorsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
};


/**
 * repeated double xs = 1;
 * @return {!Array<number>}
 */
proto.pojo.Polygon.prototype.getXsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.setXsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.addXs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.clearXsList = function() {
  return this.setXsList([]);
};


/**
 * repeated double ys = 2;
 * @return {!Array<number>}
 */
proto.pojo.Polygon.prototype.getYsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.setYsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.addYs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.clearYsList = function() {
  return this.setYsList([]);
};


/**
 * repeated double zs = 3;
 * @return {!Array<number>}
 */
proto.pojo.Polygon.prototype.getZsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.setZsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.addZs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.clearZsList = function() {
  return this.setZsList([]);
};


/**
 * repeated int32 separators = 4;
 * @return {!Array<number>}
 */
proto.pojo.Polygon.prototype.getSeparatorsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.setSeparatorsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.addSeparators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Polygon} returns this
 */
proto.pojo.Polygon.prototype.clearSeparatorsList = function() {
  return this.setSeparatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.MultiPoint.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.MultiPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.MultiPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.MultiPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.MultiPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    xsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    ysList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    zsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.MultiPoint}
 */
proto.pojo.MultiPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.MultiPoint;
  return proto.pojo.MultiPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.MultiPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.MultiPoint}
 */
proto.pojo.MultiPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addXs(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addYs(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addZs(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.MultiPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.MultiPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.MultiPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.MultiPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getYsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getZsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
};


/**
 * repeated double xs = 1;
 * @return {!Array<number>}
 */
proto.pojo.MultiPoint.prototype.getXsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.setXsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.addXs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.clearXsList = function() {
  return this.setXsList([]);
};


/**
 * repeated double ys = 2;
 * @return {!Array<number>}
 */
proto.pojo.MultiPoint.prototype.getYsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.setYsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.addYs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.clearYsList = function() {
  return this.setYsList([]);
};


/**
 * repeated double zs = 3;
 * @return {!Array<number>}
 */
proto.pojo.MultiPoint.prototype.getZsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.setZsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.addZs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPoint} returns this
 */
proto.pojo.MultiPoint.prototype.clearZsList = function() {
  return this.setZsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.MultiLineString.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.MultiLineString.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.MultiLineString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.MultiLineString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.MultiLineString.toObject = function(includeInstance, msg) {
  var f, obj = {
    xsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    ysList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    zsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    separatorsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.MultiLineString}
 */
proto.pojo.MultiLineString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.MultiLineString;
  return proto.pojo.MultiLineString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.MultiLineString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.MultiLineString}
 */
proto.pojo.MultiLineString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addXs(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addYs(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addZs(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSeparators(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.MultiLineString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.MultiLineString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.MultiLineString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.MultiLineString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getYsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getZsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getSeparatorsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
};


/**
 * repeated double xs = 1;
 * @return {!Array<number>}
 */
proto.pojo.MultiLineString.prototype.getXsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.setXsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.addXs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.clearXsList = function() {
  return this.setXsList([]);
};


/**
 * repeated double ys = 2;
 * @return {!Array<number>}
 */
proto.pojo.MultiLineString.prototype.getYsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.setYsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.addYs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.clearYsList = function() {
  return this.setYsList([]);
};


/**
 * repeated double zs = 3;
 * @return {!Array<number>}
 */
proto.pojo.MultiLineString.prototype.getZsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.setZsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.addZs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.clearZsList = function() {
  return this.setZsList([]);
};


/**
 * repeated int32 separators = 4;
 * @return {!Array<number>}
 */
proto.pojo.MultiLineString.prototype.getSeparatorsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.setSeparatorsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.addSeparators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiLineString} returns this
 */
proto.pojo.MultiLineString.prototype.clearSeparatorsList = function() {
  return this.setSeparatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.MultiPolygon.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.MultiPolygon.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.MultiPolygon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.MultiPolygon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.MultiPolygon.toObject = function(includeInstance, msg) {
  var f, obj = {
    xsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    ysList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    zsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    coordseparatorsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    polygonseparatorsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.MultiPolygon}
 */
proto.pojo.MultiPolygon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.MultiPolygon;
  return proto.pojo.MultiPolygon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.MultiPolygon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.MultiPolygon}
 */
proto.pojo.MultiPolygon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addXs(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addYs(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addZs(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCoordseparators(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPolygonseparators(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.MultiPolygon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.MultiPolygon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.MultiPolygon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.MultiPolygon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getYsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getZsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getCoordseparatorsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getPolygonseparatorsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
};


/**
 * repeated double xs = 1;
 * @return {!Array<number>}
 */
proto.pojo.MultiPolygon.prototype.getXsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.setXsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.addXs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.clearXsList = function() {
  return this.setXsList([]);
};


/**
 * repeated double ys = 2;
 * @return {!Array<number>}
 */
proto.pojo.MultiPolygon.prototype.getYsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.setYsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.addYs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.clearYsList = function() {
  return this.setYsList([]);
};


/**
 * repeated double zs = 3;
 * @return {!Array<number>}
 */
proto.pojo.MultiPolygon.prototype.getZsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.setZsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.addZs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.clearZsList = function() {
  return this.setZsList([]);
};


/**
 * repeated int32 coordSeparators = 4;
 * @return {!Array<number>}
 */
proto.pojo.MultiPolygon.prototype.getCoordseparatorsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.setCoordseparatorsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.addCoordseparators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.clearCoordseparatorsList = function() {
  return this.setCoordseparatorsList([]);
};


/**
 * repeated int32 polygonSeparators = 5;
 * @return {!Array<number>}
 */
proto.pojo.MultiPolygon.prototype.getPolygonseparatorsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.setPolygonseparatorsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.addPolygonseparators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.MultiPolygon} returns this
 */
proto.pojo.MultiPolygon.prototype.clearPolygonseparatorsList = function() {
  return this.setPolygonseparatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.GeometryCollection.repeatedFields_ = [1,2,3,4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.GeometryCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.GeometryCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.GeometryCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.GeometryCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.pojo.Point.toObject, includeInstance),
    linestringsList: jspb.Message.toObjectList(msg.getLinestringsList(),
    proto.pojo.LineString.toObject, includeInstance),
    polygonsList: jspb.Message.toObjectList(msg.getPolygonsList(),
    proto.pojo.Polygon.toObject, includeInstance),
    multipointsList: jspb.Message.toObjectList(msg.getMultipointsList(),
    proto.pojo.MultiPoint.toObject, includeInstance),
    multilinestringsList: jspb.Message.toObjectList(msg.getMultilinestringsList(),
    proto.pojo.MultiLineString.toObject, includeInstance),
    multipolygonsList: jspb.Message.toObjectList(msg.getMultipolygonsList(),
    proto.pojo.MultiPolygon.toObject, includeInstance),
    geometrycollectionsList: jspb.Message.toObjectList(msg.getGeometrycollectionsList(),
    proto.pojo.GeometryCollection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.GeometryCollection}
 */
proto.pojo.GeometryCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.GeometryCollection;
  return proto.pojo.GeometryCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.GeometryCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.GeometryCollection}
 */
proto.pojo.GeometryCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pojo.Point;
      reader.readMessage(value,proto.pojo.Point.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 2:
      var value = new proto.pojo.LineString;
      reader.readMessage(value,proto.pojo.LineString.deserializeBinaryFromReader);
      msg.addLinestrings(value);
      break;
    case 3:
      var value = new proto.pojo.Polygon;
      reader.readMessage(value,proto.pojo.Polygon.deserializeBinaryFromReader);
      msg.addPolygons(value);
      break;
    case 4:
      var value = new proto.pojo.MultiPoint;
      reader.readMessage(value,proto.pojo.MultiPoint.deserializeBinaryFromReader);
      msg.addMultipoints(value);
      break;
    case 5:
      var value = new proto.pojo.MultiLineString;
      reader.readMessage(value,proto.pojo.MultiLineString.deserializeBinaryFromReader);
      msg.addMultilinestrings(value);
      break;
    case 6:
      var value = new proto.pojo.MultiPolygon;
      reader.readMessage(value,proto.pojo.MultiPolygon.deserializeBinaryFromReader);
      msg.addMultipolygons(value);
      break;
    case 7:
      var value = new proto.pojo.GeometryCollection;
      reader.readMessage(value,proto.pojo.GeometryCollection.deserializeBinaryFromReader);
      msg.addGeometrycollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.GeometryCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.GeometryCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.GeometryCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.GeometryCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pojo.Point.serializeBinaryToWriter
    );
  }
  f = message.getLinestringsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pojo.LineString.serializeBinaryToWriter
    );
  }
  f = message.getPolygonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pojo.Polygon.serializeBinaryToWriter
    );
  }
  f = message.getMultipointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pojo.MultiPoint.serializeBinaryToWriter
    );
  }
  f = message.getMultilinestringsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.pojo.MultiLineString.serializeBinaryToWriter
    );
  }
  f = message.getMultipolygonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.pojo.MultiPolygon.serializeBinaryToWriter
    );
  }
  f = message.getGeometrycollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.pojo.GeometryCollection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Point points = 1;
 * @return {!Array<!proto.pojo.Point>}
 */
proto.pojo.GeometryCollection.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.pojo.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.Point, 1));
};


/**
 * @param {!Array<!proto.pojo.Point>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pojo.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.Point}
 */
proto.pojo.GeometryCollection.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pojo.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * repeated LineString lineStrings = 2;
 * @return {!Array<!proto.pojo.LineString>}
 */
proto.pojo.GeometryCollection.prototype.getLinestringsList = function() {
  return /** @type{!Array<!proto.pojo.LineString>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.LineString, 2));
};


/**
 * @param {!Array<!proto.pojo.LineString>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setLinestringsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pojo.LineString=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.LineString}
 */
proto.pojo.GeometryCollection.prototype.addLinestrings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pojo.LineString, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearLinestringsList = function() {
  return this.setLinestringsList([]);
};


/**
 * repeated Polygon polygons = 3;
 * @return {!Array<!proto.pojo.Polygon>}
 */
proto.pojo.GeometryCollection.prototype.getPolygonsList = function() {
  return /** @type{!Array<!proto.pojo.Polygon>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.Polygon, 3));
};


/**
 * @param {!Array<!proto.pojo.Polygon>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setPolygonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pojo.Polygon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.Polygon}
 */
proto.pojo.GeometryCollection.prototype.addPolygons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pojo.Polygon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearPolygonsList = function() {
  return this.setPolygonsList([]);
};


/**
 * repeated MultiPoint multiPoints = 4;
 * @return {!Array<!proto.pojo.MultiPoint>}
 */
proto.pojo.GeometryCollection.prototype.getMultipointsList = function() {
  return /** @type{!Array<!proto.pojo.MultiPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.MultiPoint, 4));
};


/**
 * @param {!Array<!proto.pojo.MultiPoint>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setMultipointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pojo.MultiPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPoint}
 */
proto.pojo.GeometryCollection.prototype.addMultipoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pojo.MultiPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearMultipointsList = function() {
  return this.setMultipointsList([]);
};


/**
 * repeated MultiLineString multiLineStrings = 5;
 * @return {!Array<!proto.pojo.MultiLineString>}
 */
proto.pojo.GeometryCollection.prototype.getMultilinestringsList = function() {
  return /** @type{!Array<!proto.pojo.MultiLineString>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.MultiLineString, 5));
};


/**
 * @param {!Array<!proto.pojo.MultiLineString>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setMultilinestringsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.pojo.MultiLineString=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiLineString}
 */
proto.pojo.GeometryCollection.prototype.addMultilinestrings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.pojo.MultiLineString, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearMultilinestringsList = function() {
  return this.setMultilinestringsList([]);
};


/**
 * repeated MultiPolygon multiPolygons = 6;
 * @return {!Array<!proto.pojo.MultiPolygon>}
 */
proto.pojo.GeometryCollection.prototype.getMultipolygonsList = function() {
  return /** @type{!Array<!proto.pojo.MultiPolygon>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.MultiPolygon, 6));
};


/**
 * @param {!Array<!proto.pojo.MultiPolygon>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setMultipolygonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.pojo.MultiPolygon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.MultiPolygon}
 */
proto.pojo.GeometryCollection.prototype.addMultipolygons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.pojo.MultiPolygon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearMultipolygonsList = function() {
  return this.setMultipolygonsList([]);
};


/**
 * repeated GeometryCollection geometryCollections = 7;
 * @return {!Array<!proto.pojo.GeometryCollection>}
 */
proto.pojo.GeometryCollection.prototype.getGeometrycollectionsList = function() {
  return /** @type{!Array<!proto.pojo.GeometryCollection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.GeometryCollection, 7));
};


/**
 * @param {!Array<!proto.pojo.GeometryCollection>} value
 * @return {!proto.pojo.GeometryCollection} returns this
*/
proto.pojo.GeometryCollection.prototype.setGeometrycollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.pojo.GeometryCollection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.GeometryCollection}
 */
proto.pojo.GeometryCollection.prototype.addGeometrycollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.pojo.GeometryCollection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.GeometryCollection} returns this
 */
proto.pojo.GeometryCollection.prototype.clearGeometrycollectionsList = function() {
  return this.setGeometrycollectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.Geometry.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.Geometry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.Geometry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Geometry.toObject = function(includeInstance, msg) {
  var f, obj = {
    point: (f = msg.getPoint()) && proto.pojo.Point.toObject(includeInstance, f),
    linestring: (f = msg.getLinestring()) && proto.pojo.LineString.toObject(includeInstance, f),
    polygon: (f = msg.getPolygon()) && proto.pojo.Polygon.toObject(includeInstance, f),
    multipoint: (f = msg.getMultipoint()) && proto.pojo.MultiPoint.toObject(includeInstance, f),
    multilinestring: (f = msg.getMultilinestring()) && proto.pojo.MultiLineString.toObject(includeInstance, f),
    multipolygon: (f = msg.getMultipolygon()) && proto.pojo.MultiPolygon.toObject(includeInstance, f),
    geometrycollection: (f = msg.getGeometrycollection()) && proto.pojo.GeometryCollection.toObject(includeInstance, f),
    nullgeometry: (f = msg.getNullgeometry()) && proto.pojo.NullGeometry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.Geometry}
 */
proto.pojo.Geometry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.Geometry;
  return proto.pojo.Geometry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.Geometry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.Geometry}
 */
proto.pojo.Geometry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pojo.Point;
      reader.readMessage(value,proto.pojo.Point.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    case 2:
      var value = new proto.pojo.LineString;
      reader.readMessage(value,proto.pojo.LineString.deserializeBinaryFromReader);
      msg.setLinestring(value);
      break;
    case 3:
      var value = new proto.pojo.Polygon;
      reader.readMessage(value,proto.pojo.Polygon.deserializeBinaryFromReader);
      msg.setPolygon(value);
      break;
    case 4:
      var value = new proto.pojo.MultiPoint;
      reader.readMessage(value,proto.pojo.MultiPoint.deserializeBinaryFromReader);
      msg.setMultipoint(value);
      break;
    case 5:
      var value = new proto.pojo.MultiLineString;
      reader.readMessage(value,proto.pojo.MultiLineString.deserializeBinaryFromReader);
      msg.setMultilinestring(value);
      break;
    case 6:
      var value = new proto.pojo.MultiPolygon;
      reader.readMessage(value,proto.pojo.MultiPolygon.deserializeBinaryFromReader);
      msg.setMultipolygon(value);
      break;
    case 7:
      var value = new proto.pojo.GeometryCollection;
      reader.readMessage(value,proto.pojo.GeometryCollection.deserializeBinaryFromReader);
      msg.setGeometrycollection(value);
      break;
    case 8:
      var value = new proto.pojo.NullGeometry;
      reader.readMessage(value,proto.pojo.NullGeometry.deserializeBinaryFromReader);
      msg.setNullgeometry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.Geometry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.Geometry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.Geometry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Geometry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pojo.Point.serializeBinaryToWriter
    );
  }
  f = message.getLinestring();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pojo.LineString.serializeBinaryToWriter
    );
  }
  f = message.getPolygon();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pojo.Polygon.serializeBinaryToWriter
    );
  }
  f = message.getMultipoint();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.pojo.MultiPoint.serializeBinaryToWriter
    );
  }
  f = message.getMultilinestring();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.pojo.MultiLineString.serializeBinaryToWriter
    );
  }
  f = message.getMultipolygon();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.pojo.MultiPolygon.serializeBinaryToWriter
    );
  }
  f = message.getGeometrycollection();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.pojo.GeometryCollection.serializeBinaryToWriter
    );
  }
  f = message.getNullgeometry();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.pojo.NullGeometry.serializeBinaryToWriter
    );
  }
};


/**
 * optional Point point = 1;
 * @return {?proto.pojo.Point}
 */
proto.pojo.Geometry.prototype.getPoint = function() {
  return /** @type{?proto.pojo.Point} */ (
    jspb.Message.getWrapperField(this, proto.pojo.Point, 1));
};


/**
 * @param {?proto.pojo.Point|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setPoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearPoint = function() {
  return this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LineString lineString = 2;
 * @return {?proto.pojo.LineString}
 */
proto.pojo.Geometry.prototype.getLinestring = function() {
  return /** @type{?proto.pojo.LineString} */ (
    jspb.Message.getWrapperField(this, proto.pojo.LineString, 2));
};


/**
 * @param {?proto.pojo.LineString|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setLinestring = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearLinestring = function() {
  return this.setLinestring(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasLinestring = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Polygon polygon = 3;
 * @return {?proto.pojo.Polygon}
 */
proto.pojo.Geometry.prototype.getPolygon = function() {
  return /** @type{?proto.pojo.Polygon} */ (
    jspb.Message.getWrapperField(this, proto.pojo.Polygon, 3));
};


/**
 * @param {?proto.pojo.Polygon|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setPolygon = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearPolygon = function() {
  return this.setPolygon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasPolygon = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MultiPoint multiPoint = 4;
 * @return {?proto.pojo.MultiPoint}
 */
proto.pojo.Geometry.prototype.getMultipoint = function() {
  return /** @type{?proto.pojo.MultiPoint} */ (
    jspb.Message.getWrapperField(this, proto.pojo.MultiPoint, 4));
};


/**
 * @param {?proto.pojo.MultiPoint|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setMultipoint = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearMultipoint = function() {
  return this.setMultipoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasMultipoint = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MultiLineString multiLineString = 5;
 * @return {?proto.pojo.MultiLineString}
 */
proto.pojo.Geometry.prototype.getMultilinestring = function() {
  return /** @type{?proto.pojo.MultiLineString} */ (
    jspb.Message.getWrapperField(this, proto.pojo.MultiLineString, 5));
};


/**
 * @param {?proto.pojo.MultiLineString|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setMultilinestring = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearMultilinestring = function() {
  return this.setMultilinestring(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasMultilinestring = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MultiPolygon multiPolygon = 6;
 * @return {?proto.pojo.MultiPolygon}
 */
proto.pojo.Geometry.prototype.getMultipolygon = function() {
  return /** @type{?proto.pojo.MultiPolygon} */ (
    jspb.Message.getWrapperField(this, proto.pojo.MultiPolygon, 6));
};


/**
 * @param {?proto.pojo.MultiPolygon|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setMultipolygon = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearMultipolygon = function() {
  return this.setMultipolygon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasMultipolygon = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GeometryCollection geometryCollection = 7;
 * @return {?proto.pojo.GeometryCollection}
 */
proto.pojo.Geometry.prototype.getGeometrycollection = function() {
  return /** @type{?proto.pojo.GeometryCollection} */ (
    jspb.Message.getWrapperField(this, proto.pojo.GeometryCollection, 7));
};


/**
 * @param {?proto.pojo.GeometryCollection|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setGeometrycollection = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearGeometrycollection = function() {
  return this.setGeometrycollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasGeometrycollection = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional NullGeometry nullGeometry = 8;
 * @return {?proto.pojo.NullGeometry}
 */
proto.pojo.Geometry.prototype.getNullgeometry = function() {
  return /** @type{?proto.pojo.NullGeometry} */ (
    jspb.Message.getWrapperField(this, proto.pojo.NullGeometry, 8));
};


/**
 * @param {?proto.pojo.NullGeometry|undefined} value
 * @return {!proto.pojo.Geometry} returns this
*/
proto.pojo.Geometry.prototype.setNullgeometry = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.Geometry} returns this
 */
proto.pojo.Geometry.prototype.clearNullgeometry = function() {
  return this.setNullgeometry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.Geometry.prototype.hasNullgeometry = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.Feature.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.Feature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.Feature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Feature.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.Feature}
 */
proto.pojo.Feature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.Feature;
  return proto.pojo.Feature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.Feature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.Feature}
 */
proto.pojo.Feature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.Feature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.Feature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.Feature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Feature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.Map.repeatedFields_ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.Map.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.Map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.Map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Map.toObject = function(includeInstance, msg) {
  var f, obj = {
    doublekeyidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    doublevalueidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    floatkeyidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    floatvalueidsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    sint32keyidsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    sint32valueidsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    sint64keyidsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    sint64valueidsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    boolkeyidsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    boolvaluesList: (f = jspb.Message.getRepeatedBooleanField(msg, 10)) == null ? undefined : f,
    stringkeyidsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    stringvalueidsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    byteskeyidsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    bytesvalueidsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    listkeyidsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    listvaluesList: jspb.Message.toObjectList(msg.getListvaluesList(),
    proto.pojo.List.toObject, includeInstance),
    submapkeyidsList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    submapvaluesList: jspb.Message.toObjectList(msg.getSubmapvaluesList(),
    proto.pojo.Map.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.Map}
 */
proto.pojo.Map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.Map;
  return proto.pojo.Map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.Map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.Map}
 */
proto.pojo.Map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDoublekeyids(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDoublevalueids(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFloatkeyids(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFloatvalueids(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint32keyids(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint32valueids(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint64keyids(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint64valueids(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBoolkeyids(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBoolvalues(values[i]);
      }
      break;
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStringkeyids(values[i]);
      }
      break;
    case 12:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStringvalueids(values[i]);
      }
      break;
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addByteskeyids(values[i]);
      }
      break;
    case 14:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBytesvalueids(values[i]);
      }
      break;
    case 15:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addListkeyids(values[i]);
      }
      break;
    case 16:
      var value = new proto.pojo.List;
      reader.readMessage(value,proto.pojo.List.deserializeBinaryFromReader);
      msg.addListvalues(value);
      break;
    case 17:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSubmapkeyids(values[i]);
      }
      break;
    case 18:
      var value = new proto.pojo.Map;
      reader.readMessage(value,proto.pojo.Map.deserializeBinaryFromReader);
      msg.addSubmapvalues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.Map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.Map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.Map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.Map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDoublekeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getDoublevalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getFloatkeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getFloatvalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getSint32keyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getSint32valueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      6,
      f
    );
  }
  f = message.getSint64keyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      7,
      f
    );
  }
  f = message.getSint64valueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getBoolkeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      9,
      f
    );
  }
  f = message.getBoolvaluesList();
  if (f.length > 0) {
    writer.writePackedBool(
      10,
      f
    );
  }
  f = message.getStringkeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      11,
      f
    );
  }
  f = message.getStringvalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      12,
      f
    );
  }
  f = message.getByteskeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      13,
      f
    );
  }
  f = message.getBytesvalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      14,
      f
    );
  }
  f = message.getListkeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      15,
      f
    );
  }
  f = message.getListvaluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.pojo.List.serializeBinaryToWriter
    );
  }
  f = message.getSubmapkeyidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      17,
      f
    );
  }
  f = message.getSubmapvaluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.pojo.Map.serializeBinaryToWriter
    );
  }
};


/**
 * repeated int32 doubleKeyIds = 1;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getDoublekeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setDoublekeyidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addDoublekeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearDoublekeyidsList = function() {
  return this.setDoublekeyidsList([]);
};


/**
 * repeated int32 doubleValueIds = 2;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getDoublevalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setDoublevalueidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addDoublevalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearDoublevalueidsList = function() {
  return this.setDoublevalueidsList([]);
};


/**
 * repeated int32 floatKeyIds = 3;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getFloatkeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setFloatkeyidsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addFloatkeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearFloatkeyidsList = function() {
  return this.setFloatkeyidsList([]);
};


/**
 * repeated int32 floatValueIds = 4;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getFloatvalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setFloatvalueidsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addFloatvalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearFloatvalueidsList = function() {
  return this.setFloatvalueidsList([]);
};


/**
 * repeated int32 sint32KeyIds = 5;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getSint32keyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setSint32keyidsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addSint32keyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearSint32keyidsList = function() {
  return this.setSint32keyidsList([]);
};


/**
 * repeated int32 sint32ValueIds = 6;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getSint32valueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setSint32valueidsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addSint32valueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearSint32valueidsList = function() {
  return this.setSint32valueidsList([]);
};


/**
 * repeated int32 sint64KeyIds = 7;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getSint64keyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setSint64keyidsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addSint64keyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearSint64keyidsList = function() {
  return this.setSint64keyidsList([]);
};


/**
 * repeated int32 sint64ValueIds = 8;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getSint64valueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setSint64valueidsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addSint64valueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearSint64valueidsList = function() {
  return this.setSint64valueidsList([]);
};


/**
 * repeated int32 boolKeyIds = 9;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getBoolkeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setBoolkeyidsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addBoolkeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearBoolkeyidsList = function() {
  return this.setBoolkeyidsList([]);
};


/**
 * repeated bool boolValues = 10;
 * @return {!Array<boolean>}
 */
proto.pojo.Map.prototype.getBoolvaluesList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 10));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setBoolvaluesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addBoolvalues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearBoolvaluesList = function() {
  return this.setBoolvaluesList([]);
};


/**
 * repeated int32 stringKeyIds = 11;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getStringkeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setStringkeyidsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addStringkeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearStringkeyidsList = function() {
  return this.setStringkeyidsList([]);
};


/**
 * repeated int32 stringValueIds = 12;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getStringvalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setStringvalueidsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addStringvalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearStringvalueidsList = function() {
  return this.setStringvalueidsList([]);
};


/**
 * repeated int32 bytesKeyIds = 13;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getByteskeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setByteskeyidsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addByteskeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearByteskeyidsList = function() {
  return this.setByteskeyidsList([]);
};


/**
 * repeated int32 bytesValueIds = 14;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getBytesvalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setBytesvalueidsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addBytesvalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearBytesvalueidsList = function() {
  return this.setBytesvalueidsList([]);
};


/**
 * repeated int32 listKeyIds = 15;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getListkeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setListkeyidsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addListkeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearListkeyidsList = function() {
  return this.setListkeyidsList([]);
};


/**
 * repeated List listValues = 16;
 * @return {!Array<!proto.pojo.List>}
 */
proto.pojo.Map.prototype.getListvaluesList = function() {
  return /** @type{!Array<!proto.pojo.List>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.List, 16));
};


/**
 * @param {!Array<!proto.pojo.List>} value
 * @return {!proto.pojo.Map} returns this
*/
proto.pojo.Map.prototype.setListvaluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.pojo.List=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.List}
 */
proto.pojo.Map.prototype.addListvalues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.pojo.List, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearListvaluesList = function() {
  return this.setListvaluesList([]);
};


/**
 * repeated int32 subMapKeyIds = 17;
 * @return {!Array<number>}
 */
proto.pojo.Map.prototype.getSubmapkeyidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.setSubmapkeyidsList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.addSubmapkeyids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearSubmapkeyidsList = function() {
  return this.setSubmapkeyidsList([]);
};


/**
 * repeated Map subMapValues = 18;
 * @return {!Array<!proto.pojo.Map>}
 */
proto.pojo.Map.prototype.getSubmapvaluesList = function() {
  return /** @type{!Array<!proto.pojo.Map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.Map, 18));
};


/**
 * @param {!Array<!proto.pojo.Map>} value
 * @return {!proto.pojo.Map} returns this
*/
proto.pojo.Map.prototype.setSubmapvaluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.pojo.Map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map}
 */
proto.pojo.Map.prototype.addSubmapvalues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.pojo.Map, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.Map} returns this
 */
proto.pojo.Map.prototype.clearSubmapvaluesList = function() {
  return this.setSubmapvaluesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.List.repeatedFields_ = [1,2,3,4,5,6,7,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.List.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    indexesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    doublevalueidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    floatvalueidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    sint32valueidsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    sint64valueidsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    boolvaluesList: (f = jspb.Message.getRepeatedBooleanField(msg, 6)) == null ? undefined : f,
    stringvalueidsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    bytesvalueidsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    mapvaluesList: jspb.Message.toObjectList(msg.getMapvaluesList(),
    proto.pojo.Map.toObject, includeInstance),
    sublistvaluesList: jspb.Message.toObjectList(msg.getSublistvaluesList(),
    proto.pojo.List.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.List}
 */
proto.pojo.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.List;
  return proto.pojo.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.List}
 */
proto.pojo.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addIndexes(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDoublevalueids(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFloatvalueids(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint32valueids(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint64valueids(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBoolvalues(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStringvalueids(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBytesvalueids(values[i]);
      }
      break;
    case 9:
      var value = new proto.pojo.Map;
      reader.readMessage(value,proto.pojo.Map.deserializeBinaryFromReader);
      msg.addMapvalues(value);
      break;
    case 10:
      var value = new proto.pojo.List;
      reader.readMessage(value,proto.pojo.List.deserializeBinaryFromReader);
      msg.addSublistvalues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndexesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getDoublevalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getFloatvalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getSint32valueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getSint64valueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getBoolvaluesList();
  if (f.length > 0) {
    writer.writePackedBool(
      6,
      f
    );
  }
  f = message.getStringvalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      7,
      f
    );
  }
  f = message.getBytesvalueidsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getMapvaluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.pojo.Map.serializeBinaryToWriter
    );
  }
  f = message.getSublistvaluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.pojo.List.serializeBinaryToWriter
    );
  }
};


/**
 * repeated int32 indexes = 1;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getIndexesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setIndexesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addIndexes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearIndexesList = function() {
  return this.setIndexesList([]);
};


/**
 * repeated int32 doubleValueIds = 2;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getDoublevalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setDoublevalueidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addDoublevalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearDoublevalueidsList = function() {
  return this.setDoublevalueidsList([]);
};


/**
 * repeated int32 floatValueIds = 3;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getFloatvalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setFloatvalueidsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addFloatvalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearFloatvalueidsList = function() {
  return this.setFloatvalueidsList([]);
};


/**
 * repeated int32 sint32ValueIds = 4;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getSint32valueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setSint32valueidsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addSint32valueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearSint32valueidsList = function() {
  return this.setSint32valueidsList([]);
};


/**
 * repeated int32 sint64ValueIds = 5;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getSint64valueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setSint64valueidsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addSint64valueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearSint64valueidsList = function() {
  return this.setSint64valueidsList([]);
};


/**
 * repeated bool boolValues = 6;
 * @return {!Array<boolean>}
 */
proto.pojo.List.prototype.getBoolvaluesList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 6));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setBoolvaluesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addBoolvalues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearBoolvaluesList = function() {
  return this.setBoolvaluesList([]);
};


/**
 * repeated int32 stringValueIds = 7;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getStringvalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setStringvalueidsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addStringvalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearStringvalueidsList = function() {
  return this.setStringvalueidsList([]);
};


/**
 * repeated int32 bytesValueIds = 8;
 * @return {!Array<number>}
 */
proto.pojo.List.prototype.getBytesvalueidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.setBytesvalueidsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.addBytesvalueids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearBytesvalueidsList = function() {
  return this.setBytesvalueidsList([]);
};


/**
 * repeated Map mapValues = 9;
 * @return {!Array<!proto.pojo.Map>}
 */
proto.pojo.List.prototype.getMapvaluesList = function() {
  return /** @type{!Array<!proto.pojo.Map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.Map, 9));
};


/**
 * @param {!Array<!proto.pojo.Map>} value
 * @return {!proto.pojo.List} returns this
*/
proto.pojo.List.prototype.setMapvaluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.pojo.Map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map}
 */
proto.pojo.List.prototype.addMapvalues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.pojo.Map, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearMapvaluesList = function() {
  return this.setMapvaluesList([]);
};


/**
 * repeated List subListValues = 10;
 * @return {!Array<!proto.pojo.List>}
 */
proto.pojo.List.prototype.getSublistvaluesList = function() {
  return /** @type{!Array<!proto.pojo.List>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.List, 10));
};


/**
 * @param {!Array<!proto.pojo.List>} value
 * @return {!proto.pojo.List} returns this
*/
proto.pojo.List.prototype.setSublistvaluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.pojo.List=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.List}
 */
proto.pojo.List.prototype.addSublistvalues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.pojo.List, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.List} returns this
 */
proto.pojo.List.prototype.clearSublistvaluesList = function() {
  return this.setSublistvaluesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pojo.FeatureCollection.repeatedFields_ = [1,2,3,4,5,6,7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pojo.FeatureCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.pojo.FeatureCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pojo.FeatureCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.FeatureCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    doublevaluesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    floatvaluesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    sint32valuesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    sint64valuesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    stringvaluesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    bytesvaluesList: msg.getBytesvaluesList_asB64(),
    geometriesList: jspb.Message.toObjectList(msg.getGeometriesList(),
    proto.pojo.Geometry.toObject, includeInstance),
    propertiessList: jspb.Message.toObjectList(msg.getPropertiessList(),
    proto.pojo.Map.toObject, includeInstance),
    headers: (f = msg.getHeaders()) && proto.pojo.Map.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pojo.FeatureCollection}
 */
proto.pojo.FeatureCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pojo.FeatureCollection;
  return proto.pojo.FeatureCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pojo.FeatureCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pojo.FeatureCollection}
 */
proto.pojo.FeatureCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKeys(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDoublevalues(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFloatvalues(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint32values(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSint64values(values[i]);
      }
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addStringvalues(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addBytesvalues(value);
      break;
    case 8:
      var value = new proto.pojo.Geometry;
      reader.readMessage(value,proto.pojo.Geometry.deserializeBinaryFromReader);
      msg.addGeometries(value);
      break;
    case 9:
      var value = new proto.pojo.Map;
      reader.readMessage(value,proto.pojo.Map.deserializeBinaryFromReader);
      msg.addPropertiess(value);
      break;
    case 10:
      var value = new proto.pojo.Map;
      reader.readMessage(value,proto.pojo.Map.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pojo.FeatureCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pojo.FeatureCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pojo.FeatureCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pojo.FeatureCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDoublevaluesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getFloatvaluesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getSint32valuesList();
  if (f.length > 0) {
    writer.writePackedSint32(
      4,
      f
    );
  }
  f = message.getSint64valuesList();
  if (f.length > 0) {
    writer.writePackedSint64(
      5,
      f
    );
  }
  f = message.getStringvaluesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getBytesvaluesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      7,
      f
    );
  }
  f = message.getGeometriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.pojo.Geometry.serializeBinaryToWriter
    );
  }
  f = message.getPropertiessList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.pojo.Map.serializeBinaryToWriter
    );
  }
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.pojo.Map.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string keys = 1;
 * @return {!Array<string>}
 */
proto.pojo.FeatureCollection.prototype.getKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};


/**
 * repeated double doubleValues = 2;
 * @return {!Array<number>}
 */
proto.pojo.FeatureCollection.prototype.getDoublevaluesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setDoublevaluesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addDoublevalues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearDoublevaluesList = function() {
  return this.setDoublevaluesList([]);
};


/**
 * repeated float floatValues = 3;
 * @return {!Array<number>}
 */
proto.pojo.FeatureCollection.prototype.getFloatvaluesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setFloatvaluesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addFloatvalues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearFloatvaluesList = function() {
  return this.setFloatvaluesList([]);
};


/**
 * repeated sint32 sint32Values = 4;
 * @return {!Array<number>}
 */
proto.pojo.FeatureCollection.prototype.getSint32valuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setSint32valuesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addSint32values = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearSint32valuesList = function() {
  return this.setSint32valuesList([]);
};


/**
 * repeated sint64 sint64Values = 5;
 * @return {!Array<number>}
 */
proto.pojo.FeatureCollection.prototype.getSint64valuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setSint64valuesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addSint64values = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearSint64valuesList = function() {
  return this.setSint64valuesList([]);
};


/**
 * repeated string stringValues = 6;
 * @return {!Array<string>}
 */
proto.pojo.FeatureCollection.prototype.getStringvaluesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setStringvaluesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addStringvalues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearStringvaluesList = function() {
  return this.setStringvaluesList([]);
};


/**
 * repeated bytes bytesValues = 7;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pojo.FeatureCollection.prototype.getBytesvaluesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * repeated bytes bytesValues = 7;
 * This is a type-conversion wrapper around `getBytesvaluesList()`
 * @return {!Array<string>}
 */
proto.pojo.FeatureCollection.prototype.getBytesvaluesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getBytesvaluesList()));
};


/**
 * repeated bytes bytesValues = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesvaluesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pojo.FeatureCollection.prototype.getBytesvaluesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getBytesvaluesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.setBytesvaluesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.addBytesvalues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearBytesvaluesList = function() {
  return this.setBytesvaluesList([]);
};


/**
 * repeated Geometry geometries = 8;
 * @return {!Array<!proto.pojo.Geometry>}
 */
proto.pojo.FeatureCollection.prototype.getGeometriesList = function() {
  return /** @type{!Array<!proto.pojo.Geometry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.Geometry, 8));
};


/**
 * @param {!Array<!proto.pojo.Geometry>} value
 * @return {!proto.pojo.FeatureCollection} returns this
*/
proto.pojo.FeatureCollection.prototype.setGeometriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.pojo.Geometry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.Geometry}
 */
proto.pojo.FeatureCollection.prototype.addGeometries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.pojo.Geometry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearGeometriesList = function() {
  return this.setGeometriesList([]);
};


/**
 * repeated Map propertiess = 9;
 * @return {!Array<!proto.pojo.Map>}
 */
proto.pojo.FeatureCollection.prototype.getPropertiessList = function() {
  return /** @type{!Array<!proto.pojo.Map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pojo.Map, 9));
};


/**
 * @param {!Array<!proto.pojo.Map>} value
 * @return {!proto.pojo.FeatureCollection} returns this
*/
proto.pojo.FeatureCollection.prototype.setPropertiessList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.pojo.Map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pojo.Map}
 */
proto.pojo.FeatureCollection.prototype.addPropertiess = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.pojo.Map, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearPropertiessList = function() {
  return this.setPropertiessList([]);
};


/**
 * optional Map headers = 10;
 * @return {?proto.pojo.Map}
 */
proto.pojo.FeatureCollection.prototype.getHeaders = function() {
  return /** @type{?proto.pojo.Map} */ (
    jspb.Message.getWrapperField(this, proto.pojo.Map, 10));
};


/**
 * @param {?proto.pojo.Map|undefined} value
 * @return {!proto.pojo.FeatureCollection} returns this
*/
proto.pojo.FeatureCollection.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pojo.FeatureCollection} returns this
 */
proto.pojo.FeatureCollection.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pojo.FeatureCollection.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 10) != null;
};


goog.object.extend(exports, proto.pojo);
